[server]
mode = "dev"
### [코드리뷰] 
# 위의 mode 에는 dev라는 string 값이 세팅이 되어 있어 
# 해당 config가 dev용임을 쉽게 확인할 수 있는 좋은 코드입니다.
# 그러나 human error를 방식하기 위해, 개발과 운영환경의 값이 다른 데이터들은 
# 해당 값을 시스템 변수나, 환경변수로 세팅해둔다면, 개발환경과, 운영환경의 config를 실수로 잘못 갈아끼웠을 때,
# 발생하는 장애들을 예방할 수 있을 것입니다.
###
port = ":8080"

[db]
host = "mongodb://localhost:27017"
name = "oos"
# user = "user"
# pass = "user!@"
### [코드리뷰] 
# ID, password와 같은 민감 정보들은 암호화된 값으로 관리하는 방법을 사용하는 방법을 추천드립니다.
# 1. 암호화에 사용될 암호화 key 값을 임의로 설정한뒤, key 값을 환경 변수와 같은 곳에 정의해놓는다.
# 2. 암호화 패키지를 사용하여 위 ID, Password 값을 암호화한 값으로 교체한다.
# 3. 이후 해당 값을 사용할때, 복호화 단계를 거쳐 run time 시점에만 실제 password가 사용될 수 있도록 한다.
# 민감정보를 관리하는 방법은 대체적으로 획일적인 방법을 사용하고 있습니다.
# 첫번째는 환경변수와 config 파일을 이용한 방법과, Vault 서버를 활용한 인증 방법이 있습니다
# 관련하여 참고하시면 보다 견고한 코드가 될 것입니다.
###

[log]
level = "debug" # debug or info
fpath = "./logs/oos" # path to generated log files
msize = 2_000 # max file size in megabytes
mage = 7 # max file age in days
mbackup = 5 # max number of log files